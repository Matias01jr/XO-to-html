name: XO Game Web Converter

on:
  release:
    types: [published]

jobs:
  convert-zip-game:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full python2.7 lua5.3 zip

      - name: Find and extract 7z game file
        run: |
          # Busca el primer archivo .7z en la raíz del repo (puedes ajustar la ruta si lo necesitas)
          GAME_7Z=$(ls *.7z | head -n 1)
          if [ -z "$GAME_7Z" ]; then
            echo "No se encontró archivo .7z"
            exit 1
          fi
          mkdir extracted_game
          7z x "$GAME_7Z" -oextracted_game

      - name: Detect game type
        id: detect
        run: |
          if ls extracted_game/*.py 1> /dev/null 2>&1; then
            echo "type=python" >> $GITHUB_OUTPUT
          elif ls extracted_game/*.lua 1> /dev/null 2>&1; then
            echo "type=lua" >> $GITHUB_OUTPUT
          else
            echo "type=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Convert Python Game to Web (Pyodide)
        if: steps.detect.outputs.type == 'python'
        run: |
          mkdir web_game
          cp -r extracted_game/* web_game/
          echo '<html><head><script src="https://cdn.jsdelivr.net/pyodide/v0.24.0/full/pyodide.js"></script></head><body>' > web_game/index.html
          echo '<div id="output"></div><script>' >> web_game/index.html
          echo 'async function main() {' >> web_game/index.html
          echo '  let pyodide = await loadPyodide();' >> web_game/index.html
          echo '  let code = await (await fetch("main.py")).text();' >> web_game/index.html
          echo '  let result = await pyodide.runPythonAsync(code);' >> web_game/index.html
          echo '  document.getElementById("output").innerText = result;' >> web_game/index.html
          echo '}; main();</script></body></html>' >> web_game/index.html

      - name: Convert Lua Game to Web (Fengari)
        if: steps.detect.outputs.type == 'lua'
        run: |
          mkdir web_game
          cp -r extracted_game/* web_game/
          echo '<html><head><script src="https://unpkg.com/fengari-web/dist/fengari-web.js"></script></head><body>' > web_game/index.html
          echo '<div id="output"></div><script type="application/lua">' >> web_game/index.html
          cat extracted_game/main.lua >> web_game/index.html
          echo '</script></body></html>' >> web_game/index.html

      - name: Fallback for unknown type
        if: steps.detect.outputs.type == 'unknown'
        run: |
          echo "Tipo de juego no soportado (solo Python 2.7 o Lua)"
          exit 1

      - name: Package web game as zip
        run: |
          cd web_game
          zip -9 -r ../web_game.zip .
        shell: bash

      - name: Upload web game zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: web_game
          path: web_game.zip
          
