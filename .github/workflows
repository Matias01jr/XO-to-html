name: XO Game Converter

on:
  workflow_dispatch:
    inputs:
      xo_file:
        description: 'Ruta al archivo .xo a convertir'
        required: true
        type: string

jobs:
  convert-xo-game:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip python2.7 lua5.3

      - name: Extract .xo file
        run: |
          mkdir extracted_xo
          unzip "${{ github.event.inputs.xo_file }}" -d extracted_xo

      - name: Inspect XO game type
        id: detect
        run: |
          if ls extracted_xo/*.py 1> /dev/null 2>&1; then
            echo "type=python" >> $GITHUB_OUTPUT
          elif ls extracted_xo/*.lua 1> /dev/null 2>&1; then
            echo "type=lua" >> $GITHUB_OUTPUT
          else
            echo "type=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Convert Python 2.7 game to HTML/JS (Pyodide)
        if: steps.detect.outputs.type == 'python'
        run: |
          mkdir web_game
          cp -r extracted_xo/* web_game/
          # Empaquetar el juego Python usando Pyodide
          echo '<html><head><script src="https://cdn.jsdelivr.net/pyodide/v0.24.0/full/pyodide.js"></script></head><body>' > web_game/index.html
          echo '<div id="output"></div><script>' >> web_game/index.html
          echo 'async function main() {' >> web_game/index.html
          echo '  let pyodide = await loadPyodide();' >> web_game/index.html
          echo '  let code = await (await fetch("main.py")).text();' >> web_game/index.html
          echo '  let result = await pyodide.runPythonAsync(code);' >> web_game/index.html
          echo '  document.getElementById("output").innerText = result;' >> web_game/index.html
          echo '}; main();</script></body></html>' >> web_game/index.html

      - name: Convert Lua game to HTML/JS (fengari)
        if: steps.detect.outputs.type == 'lua'
        run: |
          mkdir web_game
          cp -r extracted_xo/* web_game/
          # Empaquetar el juego Lua usando Fengari
          echo '<html><head><script src="https://unpkg.com/fengari-web/dist/fengari-web.js"></script></head><body>' > web_game/index.html
          echo '<div id="output"></div><script type="application/lua">' >> web_game/index.html
          cat extracted_xo/main.lua >> web_game/index.html
          echo '</script></body></html>' >> web_game/index.html

      - name: Fallback for unknown type
        if: steps.detect.outputs.type == 'unknown'
        run: |
          echo "Tipo de juego no soportado. SÃ³lo se aceptan juegos en Python 2.7 o Lua."
          exit 1

      - name: Package game as zip
        run: |
          cd web_game
          zip -r ../xo_game_web.zip .
        shell: bash

      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: xo_game_web
          path: xo_game_web.zip
